<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cursorPosition = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_right = keyboard_check_pressed(vk_right);
key_left = -keyboard_check_pressed(vk_left);
key_up = -keyboard_check_pressed(vk_up);
key_down = keyboard_check_pressed(vk_down);

if(key_up != 0){
    cursorPosition -= 1;
}
if(key_down != 0){
    cursorPosition += 1;
}

//health
if(cursorPosition == 0){
    if(key_left != 0 &amp;&amp; global.curHealth &gt; 0)
        {global.curHealth--; global.availablePoints++;}  
    if(key_right != 0 &amp;&amp; global.curHealth &lt; global.maxHealth &amp;&amp; global.availablePoints &gt; 0)
        {global.curHealth++; global.availablePoints--;}
}

//attack
if(cursorPosition == 1){
    if(key_left != 0 &amp;&amp; global.curAttack &gt; 0)
        {global.curAttack--; global.availablePoints++;}  
    if(key_right != 0 &amp;&amp; global.curAttack &lt; global.maxAttack &amp;&amp; global.availablePoints &gt; 0)
        {global.curAttack++; global.availablePoints--;}
}

//defense
if(cursorPosition == 2){
    if(key_left != 0 &amp;&amp; global.curDefense &gt; 0)
        {global.curDefense--; global.availablePoints++;}  
    if(key_right != 0 &amp;&amp; global.curDefense &lt; global.maxDefense &amp;&amp; global.availablePoints &gt; 0)
        {global.curDefense++; global.availablePoints--;}
}

//Projectile Range
if(cursorPosition == 3){
    if(key_left != 0 &amp;&amp; global.curProjRange &gt; 0)
        {global.curProjRange--; global.availablePoints++;}  
    if(key_right != 0 &amp;&amp; global.curProjRange &lt; global.maxProjRange &amp;&amp; global.availablePoints &gt; 0)
        {global.curProjRange++; global.availablePoints--;}
}

//Fire
if(cursorPosition == 4){
    if(key_left != 0 &amp;&amp; global.curFireStrength &gt; 0)
        {global.curFireStrength--; global.availablePoints++;}  
    if(key_right != 0 &amp;&amp; global.curFireStrength &lt; global.maxFireStrength &amp;&amp; global.availablePoints &gt; 0)
        {global.curFireStrength++; global.availablePoints--;}
}

//Earth
if(cursorPosition == 5){
    if(key_left != 0 &amp;&amp; global.curEarthStrength &gt; 0)
        {global.curEarthStrength--; global.availablePoints++;}  
    if(key_right != 0 &amp;&amp; global.curEarthStrength &lt; global.maxEarthStrength &amp;&amp; global.availablePoints &gt; 0)
        {global.curEarthStrength++; global.availablePoints--;}
}

//loop cursor
if(cursorPosition &gt;= 7)
    cursorPosition = 0;
if(cursorPosition &lt; 0)
    cursorPosition = 6;
    
//begin game
if(keyboard_check_pressed(vk_enter)){
    global.valueHealth = global.defaultHealth + global.curHealth * 50;
    global.valueAttack = global.defaultAttack + global.curAttack * 2;
    global.valueDefense = global.defaultDefense + global.curDefense;
    global.valueProjRange = global.defaultProjRange + global.curProjRange * 10;
    room_goto(rm_starting_area);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_text(100, 100, "Avalible Points: " + string(global.availablePoints));
draw_text(100, 130, "Character:");
    draw_menu_bar(160, global.curHealth, global.maxHealth, "Health: ");
    draw_text(500, 160, "Value: " + string(global.defaultHealth + global.curHealth * 50));
    draw_menu_bar(190, global.curAttack, global.maxAttack, "Attack: ");
    draw_text(500, 190, "Value: " + string(global.defaultAttack + global.curAttack * 2));
    draw_menu_bar(220, global.curDefense, global.maxDefense, "Defense: ");
    draw_text(500, 220, "Value: " + string(global.defaultDefense + global.curDefense));
    draw_menu_bar(250, global.curProjRange, global.maxProjRange, "Projectile Range: ");
    draw_text(500, 250, "Value: " + string(global.defaultProjRange + global.curProjRange * 10));
    
draw_text(100, 280, "Elements:");
    draw_menu_bar(310, global.curFireStrength, global.maxFireStrength, "Fire: ");
    draw_menu_bar(340, global.curEarthStrength, global.maxEarthStrength, "Earth: ");
    
draw_text(150, 400, "Begin");
    
if(cursorPosition &gt;= 0 &amp;&amp; cursorPosition &lt;= 3)
    draw_sprite(sp_green_bar, 0, 80, 160 + 8 + (cursorPosition*30));
else if(cursorPosition &gt;= 4 &amp;&amp; cursorPosition &lt;= 5)
    draw_sprite(sp_green_bar, 0, 80, 160 + 8 + (cursorPosition*30) + 30);
else
    draw_sprite(sp_green_bar, 0, 80, 400 + 8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
